services: 
  backend_django:
    build:
      context: ./backend_django
    command: wait-for-it.sh database_mysql:3306 -t 0 -- docker-entrypoint.sh
    image: inntale_backend:1.0
    container_name: inntale_backend
    ports:
      - 8000:8000
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - SECRET_KEY=${SECRET_KEY}
      # For Cloudinary
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      # For MySQL database
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - DOCKER_MYSQL_PSW=${DOCKER_MYSQL_PSW}
      - DOCKER_MYSQL_HOST=${DOCKER_MYSQL_HOST}
      - MYSQL_HOST_PORT=${MYSQL_HOST_PORT}
    restart: on-failure
    depends_on:
      - database_mysql
    volumes:
      - ./backend_django:/app

  frontend_react:
    build:
      context: ./frontend_react
    command: wait-for-it.sh backend_django:8000 -t 0 -- docker-entrypoint.sh
    image: inntale_frontend:1.0
    container_name: inntale_frontend
    ports:
      - 5173:5173
    restart: on-failure
    depends_on:
      - backend_django
      - database_mysql
    volumes:
    - ./frontend_react:/app
    - node_modules:/app/node_modules

  database_mysql:
    image: mysql:8.0
    container_name: inntale_database
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DOCKER_MYSQL_ROOT_PSW}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${DOCKER_MYSQL_PSW}
    volumes:
      - mysqldata:/var/lib/mysql
      - ./backend_django/mysql-init.sql:/docker-entrypoint-initdb.d/mysql-init.sql
    restart: unless-stopped

volumes:
  mysqldata:
  node_modules: