"""
Django settings for inntale project.
Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path
from decouple import config
import dj_database_url

# ----------------------------------------
# PATH & ENVIRONMENT
# ----------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

ENVIRONMENT = config("ENVIRONMENT", default="development").lower()
print(f"[DEBUG] ENVIRONMENT = {ENVIRONMENT}")

# ----------------------------------------
# SECRET KEY & DEBUG MODE
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
# ----------------------------------------

SECRET_KEY = config("SECRET_KEY")

if ENVIRONMENT == "development":
    DEBUG = True
    ALLOWED_HOSTS = []
else:
    DEBUG = False
    ALLOWED_HOSTS = [
        "localhost",
        "127.0.0.1",
        "backendinntale.up.railway.app",
        "inntale-campaigns.up.railway.app",
    ]
    CSRF_TRUSTED_ORIGINS = [
        "https://backendinntale.up.railway.app",
        "https://inntale-campaigns.up.railway.app",
    ]

# ----------------------------------------
# CLOUDINARY MEDIA STORAGE
# ----------------------------------------
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STORAGES = {
    "default": {
        "BACKEND": "cloudinary_storage.storage.MediaCloudinaryStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}

CLOUDINARY_STORAGE = {
    "CLOUD_NAME": config("CLOUDINARY_CLOUD_NAME"),
    "API_KEY": config("CLOUDINARY_API_KEY"),
    "API_SECRET": config("CLOUDINARY_API_SECRET"),
}

# ----------------------------------------
# STATIC FILES
# https://docs.djangoproject.com/en/5.1/howto/static-files/
# ----------------------------------------
STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# ----------------------------------------
# APPLICATIONS
# ----------------------------------------
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "cloudinary_storage",
    "cloudinary",
    "corsheaders",
    "rest_framework",
    "djoser",
    "django_filters",
    "campaigns",
]

if ENVIRONMENT == "development":
    INSTALLED_APPS.append("debug_toolbar")

# ----------------------------------------
# MIDDLEWARE
# ----------------------------------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

if ENVIRONMENT == "development":
    MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")

# ----------------------------------------
# INTERNAL IPS
# ----------------------------------------
INTERNAL_IPS = ["127.0.0.1"]

# ----------------------------------------
# URLS & WSGI
# ----------------------------------------
ROOT_URLCONF = "inntale.urls"
WSGI_APPLICATION = "inntale.wsgi.application"

# ----------------------------------------
# TEMPLATES
# ----------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# ----------------------------------------
# DATABASE
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
# ----------------------------------------

if ENVIRONMENT == "development":
    # Remember to activate the MySQL service on your PC
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": config("MYSQL_DATABASE"),
            "USER": config("MYSQL_USER"),
            "PASSWORD": config("LOCAL_MYSQL_PSW"),
            "HOST": config("LOCAL_MYSQL_HOST"),
            "PORT": config("MYSQL_HOST_PORT"),
        }
    }
else:
    DATABASES = {"default": dj_database_url.parse(config("DATABASE_URL"))}

# ----------------------------------------
# PASSWORD VALIDATORS
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
# ----------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ----------------------------------------
# INTERNATIONALIZATION
# https://docs.djangoproject.com/en/5.1/topics/i18n/
# ----------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ----------------------------------------
# PRIMARY KEY FIELD TYPE
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
# ----------------------------------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# ----------------------------------------
# CORS
# ----------------------------------------
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]

if ENVIRONMENT == "production":
    CORS_ALLOWED_ORIGINS.append("https://inntale-campaigns.up.railway.app")

# ----------------------------------------
# DJOSER & JWT
# ----------------------------------------
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    )
}

DJOSER = {
    "SERIALIZERS": {"user_create": "campaigns.serializers.RegisteringUserSerializer"}
}

SIMPLE_JWT = {
    "AUTH_HEADER_TYPES": ("JWT",),
    "TOKEN_OBTAIN_SERIALIZER": "campaigns.serializers.MyTokenObtainPairSerializer",
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=50),
}

# ----------------------------------------
# DEBUG TOOLBAR
# ----------------------------------------
DEBUG_TOOLBAR_CONFIG = {"SHOW_TOOLBAR_CALLBACK": lambda request: True}
